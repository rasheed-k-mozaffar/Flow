@inject NavigationManager Nav
@inject ApplicationState State

<div @onclick="ChatClicked"
    class="flex cursor-pointer transition-all items-center border-b border-gray-200 @(State.SelectedThread?.ThreadId == ContactModel.ThreadId ? "bg-blue-600 text-white" : "bg-white text-gray-600" ) lg:flex-row lg:min-w-full md:flex-row md:max-w-xl">
    <div class="flex items-center gap-4 p-2">
        <div>
            <img class="h-[50px] w-[50px] rounded-full"
                src="@(ContactModel.Contact!.ProfilePictureUrl ?? "/images/avatar.png")"
                alt="@ContactModel.Contact.Name" />
        </div>

        <div class="font-medium dark:text-white">
            <div class="font-light">@ContactModel.Contact!.Name</div>
            @if (@State.Threads?[ContactModel.ThreadId.ToString()!] is not null)
            {
                <div class="text-sm font-light">
                    @if (State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.SenderId ==
                   ContactModel.Contact.UserId)
                    {
                        if (State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Type is MessageType.Image)
                        {
                            <span>@ContactModel.Contact.Name!.Split(' ')[0]: Sent an image</span>
                        }
                        else
                        {
                            if (State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Content.Length <= 15)
                            {
                                <span>@ContactModel.Contact.Name!.Split(' ')[0]:
                                    @State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Content</span>
                            }
                            else
                            {
                                <span>@ContactModel.Contact.Name!.Split(' ')[0]:
                                    @State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Content.Substring(0, 15)...</span>
                            }
                        }
                    }
                    else if (State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault() == null)
                    {

                    }
                    else
                    {
                        if (State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Type is MessageType.Image)
                        {
                            <span>You: Image</span>
                        }
                        else
                        {
                            if(State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Content.Length <= 15)
                            {
                                <span>You:
                                    @State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Content</span>
                            }
                            else
                            {
                                <span>You:
                                    @State.Threads[ContactModel.ThreadId.ToString()!].LastOrDefault()?.Content.Substring(0, 15)...</span>
                            }
                        }
                    }
                </div>

            }
        </div>
    </div>
</div>

@code {
    [Parameter] public ContactDto ContactModel { get; set; } = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        State.OnChange += StateHasChanged;
    }
    private void ChatClicked()
    {
        State.SelectedThread = ContactModel;
        State.NotifyStateChanged();
        Console.WriteLine($"The current thread id: {State.SelectedThread.ThreadId}");
    }
}
