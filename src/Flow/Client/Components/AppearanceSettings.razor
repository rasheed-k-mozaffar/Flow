@inject ApplicationState State
<section class="h-full w-full overflow-y-auto p-4 transition-all space-y-10">

    <h1 class="text-4xl font-bold text-gray-700 dark:text-gray-200">Appearance</h1>
    <div>
        <h2 class="mb-3 text-md font-medium text-gray-700 dark:text-gray-200">Theme</h2>

        <div class="bg-gray-50 rounded-xl p-4 dark:bg-gray-600">
            <div class="flex items-center gap-2">
                <div class="flex flex-col gap-2 text-center">
                    <img src="/images/Light.png" @onclick="(() => SetTheme(Theme.Light))"
                        class="cursor-pointer rounded-xl max-w-[125px] @(State.UserSettings.Theme == Theme.Light ? "border-4 border-blue-700" : "border border-gray-100")" />
                    <div class="dark:text-gray-100">Light</div>
                </div>

                <div class="flex flex-col gap-2 text-center">
                    <img src="/images/Dark.png" @onclick="(() => SetTheme(Theme.Dark))"
                        class="cursor-pointer rounded-xl max-w-[125px] @(State.UserSettings.Theme == Theme.Dark ? "border-4 border-blue-700" : "border border-gray-100")" />
                    <div class="dark:text-gray-100">Dark</div>
                </div>
            </div>
        </div>
    </div>


    <div>
        <h2 class="mb-3 text-md font-medium text-gray-700 dark:text-gray-200">Color Scheme</h2>
        <div class="bg-gray-50 rounded-xl p-4 dark:bg-gray-600">
            <div class="w-full space-y-2">
                @if (State.ColorSchemes is not null)
                {
                    @foreach (var scheme in State.ColorSchemes)
                    {
                        <ColorSchemeItem Scheme="scheme" OnClick="((selectedScheme) => SetColorScheme(selectedScheme))"
                            IsSelected="@(State.UserSettings.ColorScheme?.Name == scheme.Name)" />
                    }
                }
            </div>
        </div>
    </div>

</section>

@code {
    private void SetTheme(Theme theme)
    {
        State.UserSettings.Theme = theme;
        State.NotifyStateChanged();
    }

    private void SetColorScheme(ColorSchemeDto scheme)
    {
        State.UserSettings.ColorScheme = scheme;
        State.NotifyStateChanged();
    }
}
