@if (Show)
{
    <div class="z-[1000] fixed top-2 right-2">
    <SuccessAlert Message="@successMessage" OnCloseClicked="CloseSuccessToast" DisplayFor="TimeSpan.FromSeconds(5)"
        TimerElapsed="(() => successMessage = string.Empty)" DisplayToast="@(!string.IsNullOrEmpty(successMessage))" />
</div>


    <div @onclick="CloseModal"
        class="fixed inset-0 z-50 flex h-screen w-full items-center justify-center bg-gray-200/70 dark:bg-gray-600/70  backdrop-blur-sm">
        <div class="relative max-h-full w-full max-w-2xl p-4">
            <div class="relative rounded-lg bg-white dark:bg-gray-600 shadow-lg z-50" @onclick:stopPropagation>

                <!-- Modal Header -->
                <div class="flex min-h-12 w-full items-center">
                    <div class="flex w-1/12 items-center justify-center">
                        <svg class="h-4 w-4 text-gray-800 dark:text-gray-200" aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <path stroke="currentColor" stroke-linecap="round" stroke-width="2"
                                d="m21 21-3.5-3.5M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z" />
                        </svg>
                    </div>

                    <div class="w-10/12">
                        <InputText @bind-Value="searchTerm" @oninput="HandlePerformingSearch"
                            class="w-full border-0 bg-transparent text-gray-500 font-medium outline-none ring-0 placeholder:text-gray-400 dark:text-gray-200 dark:placeholder:text-gray-300 focus:outline-none focus:ring-0 placeholder:font-medium"
                            placeholder="Search users..." />
                    </div>

                    <div class="flex w-1/12 items-center justify-center">
                        @if (!string.IsNullOrEmpty(searchTerm))
                        {
                            <button @onclick="(() => searchTerm = string.Empty)">
                                <svg class="h-6 w-6 text-gray-800 dark:text-gray-200" aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M6 18 18 6m0 12L6 6" />
                                </svg>
                            </button>
                        }
                    </div>
                </div>

                <hr class="h-[1px] bg-gray-300 dark:bg-gray-500" />

                <!-- Modal Body -->

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="w-full my-2 px-4">
                        <ErrorAlert ErrorMessage="@errorMessage" OnCloseClicked="(() => errorMessage = string.Empty)" />
                    </div>
                }

                <div class="px-6 py-4 overflow-y-auto">
                    @if (string.IsNullOrEmpty(searchTerm))
                    {
                        <div class="h-[200px] flex justify-center items-center">
                            <h1 class="font-medium text-gray-500 dark:text-gray-300">No search results</h1>
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(searchTerm) && isPerformingSearch)
                    {
                        <div class="h-[200px] flex justify-center items-center">
                            <DefaultSpinner />
                        </div>
                    }
                    else if (!string.IsNullOrEmpty(searchTerm) && !searchResults.Any())
                    {
                        <div class="h-[200px] flex justify-center items-center">
                            <h1 class="font-medium text-gray-500 dark:text-gray-300">@apiResponse.Message</h1>
                        </div>
                    }
                    else
                    {
                        <h1 class="font-semibold text-xl text-gray-400 dark:text-gray-200 mb-3">
                            @($"Found {searchResults.Count} Results For \"{searchTerm}\"")
                        </h1>

                        <div class="flex flex-col space-y-4 max-h-52 overflow-y-auto px-2">
                    @foreach (var result in searchResults)
                            {
                                <UserSearchResult User="result" OnAddClicked="(() => SendRequestToUserAsync(result.UserId!))"
                                    OnCancelRequestClicked="(() => CancelContactRequestAsync(result.ContactRequestId))" />
                            }

                            @if (hasUnloadedUsers)
                            {
                                <div class="text-center">
                                    <div class="text-blue-500 font-light text-sm cursor-pointer
                                    hover:underline @(isPerformingSearch? "cursor-not-allowed": null)"  @onclick="PerformSearchAsync">Load more...</div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback OnCloseClicked { get; set; }

    private Animate showModalAnimation = new();

    protected override void OnParametersSet()
    {
        showModalAnimation.Run();
    }

    private void CloseModal()
    {
        Show = false;
        searchTerm = string.Empty;
        OnCloseClicked.InvokeAsync();
    }
}