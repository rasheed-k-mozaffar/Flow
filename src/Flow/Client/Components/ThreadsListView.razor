@inject ApplicationState AppState

<div class="h-full w-full space-y-2">

    <div class="px-2 w-full flex justify-between items-center">
        <div class="text-2xl font-medium dark:text-gray-100">Chats</div>

        <button @onclick="CreateGroupButtonClicked"
            class="flex justify-center items-center p-2 rounded-md @($"hover:{AppState.UserSettings?.ColorScheme?.AccentsColor?.BgColor}") transition-all">
            <svg class="w-4 h-4 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
                <path fill-rule="evenodd"
                    d="M12 6a3.5 3.5 0 1 0 0 7 3.5 3.5 0 0 0 0-7Zm-1.5 8a4 4 0 0 0-4 4 2 2 0 0 0 2 2h7a2 2 0 0 0 2-2 4 4 0 0 0-4-4h-3Zm6.82-3.096a5.51 5.51 0 0 0-2.797-6.293 3.5 3.5 0 1 1 2.796 6.292ZM19.5 18h.5a2 2 0 0 0 2-2 4 4 0 0 0-4-4h-1.1a5.503 5.503 0 0 1-.471.762A5.998 5.998 0 0 1 19.5 18ZM4 7.5a3.5 3.5 0 0 1 5.477-2.889 5.5 5.5 0 0 0-2.796 6.293A3.501 3.501 0 0 1 4 7.5ZM7.1 12H6a4 4 0 0 0-4 4 2 2 0 0 0 2 2h.5a5.998 5.998 0 0 1 3.071-5.238A5.505 5.505 0 0 1 7.1 12Z"
                    clip-rule="evenodd" />
            </svg>
        </button>
    </div>

    @if (IsLoadingThreadsData)
    {
        <div class="h-[150px] w-full flex justify-center items-center">
            <DefaultSpinner />
        </div>
    }
    else
    {
        @if (AppState.Threads.Any())
        {
            var sortedThreads = AppState.Threads
            .OrderByDescending(kv => kv.Value.Messages.Any() ? kv.Value.Messages?.Max(m => m.SentOn) : DateTime.MinValue)
            .ToDictionary(kv => kv.Key, kv => kv.Value);
            <ul class="h-full overflow-y-auto">
                @foreach (var chat in sortedThreads)
                {
                    UserDetailsDto? contact = null;
                    if (chat.Value.Type is ThreadType.Normal)
                    {
                        contact = chat.Value
                        .Participants
                        .FirstOrDefault(p => p.UserId != AppState.CurrentUserId);
                    }

                    <Chat ChatDetails="@chat.Value" ThreadId="chat.Key" Contact="contact" />
                }
            </ul>
        }
        else
        {
            <div class="flex justify-center items-center h-[200px]">
                <div class="px-2 py-1 rounded-lg bg-neutral-300 text-gray-700 text-sm">
                    No contacts here!
                </div>
            </div>
        }
    }

</div>

@code {
    [Parameter] public bool IsLoadingThreadsData { get; set; }
    [Parameter] public EventCallback OnCreateGroupClicked { get; set; }
    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }

    private void CreateGroupButtonClicked()
    {
        OnCreateGroupClicked.InvokeAsync();
    }
}
