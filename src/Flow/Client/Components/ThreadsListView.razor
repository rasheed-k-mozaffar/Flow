@inject ApplicationState AppState

<div class="my-3 px-3">
    <SearchBar /> @* Search Contacts *@ @* TODO Remove this component and replace it with a search form*@
</div>

@if (IsLoadingContacts)
{
    <div class="h-full w-full flex justify-center items-center">
    <DefaultSpinner />
</div>
}
else
{
    var sortedThreads = AppState.Threads
    .OrderByDescending(kv => kv.Value.Messages.Max(m => m.SentOn))
    .ToDictionary(kv => kv.Key, kv => kv.Value);
    <ul class="h-full overflow-y-auto">
    @foreach (var contact in sortedThreads)
        {
            <Chat ContactModel="contact.Value.Contact" ThreadId="contact.Key" />
        }
    </ul>
}

@code {
    [Parameter] public bool IsLoadingContacts { get; set; }
    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }
}
