@inject ApplicationState AppState

<div class="h-full w-full space-y-2">

    <div class="px-2">
        <div class="text-2xl font-medium dark:text-gray-100">Chats</div>
    </div>

    @if (IsLoadingContacts)
    {
        <div class="h-full w-full flex justify-center items-center">
            <DefaultSpinner />
        </div>
    }
    else
    {
        if (AppState.Threads.Any())
        {
            var sortedThreads = AppState.Threads
            .OrderByDescending(kv => kv.Value.Messages.Any() ? kv.Value.Messages?.Max(m => m.SentOn) : DateTime.MinValue)
            .ToDictionary(kv => kv.Key, kv => kv.Value);
            <ul class="h-full overflow-y-auto">
                @foreach (var contact in sortedThreads)
                {
                    <Chat ContactModel="contact.Value.Contact" ThreadId="contact.Key" />
                }
            </ul>
        }
        else
        {
            <div class="flex justify-center items-center h-[200px]">
                <div class="px-2 py-1 rounded-lg bg-neutral-300 text-gray-700 text-sm">
                    No contacts here!
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter] public bool IsLoadingContacts { get; set; }
    protected override void OnInitialized()
    {
        AppState.OnChange += StateHasChanged;
    }
}
