<button data-drawer-target="default-sidebar" data-drawer-toggle="default-sidebar" aria-controls="default-sidebar"
    data-drawer-backdrop="false" type="button"
    class="inline-flex items-center p-2 mt-2 ms-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
    <span class="sr-only">Open sidebar</span>
    <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
        <path clip-rule="evenodd" fill-rule="evenodd"
            d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z">
        </path>
    </svg>
</button>

<aside id="default-sidebar"
    class="fixed top-0 left-0 z-40 w-80 h-screen transition-transform -translate-x-full sm:translate-x-0"
    aria-label="Sidebar">
    <div class="h-full px-3 py-4 bg-gray-50 overflow-y-auto dark:bg-gray-800">
        <div class="top-0 flex justify-between items-center z-50 bg-gray-50">
            <div> @* Chats Button *@
                <button class="icon-btn @(!displayNotificationsTab && !displayContactsTab ? "bg-gray-200" : "")"
                    @onclick="DisplayChatsTab">
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9 17h6l3 3v-3h2V9h-2M4 4h11v8H9l-3 3v-3H4V4Z" />
                    </svg>
                </button>
            </div>

            <div> @* Search Users Button*@
                <button class="icon-btn" @onclick="SearchButtonClicked">
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-width="2"
                            d="m21 21-3.5-3.5M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z" />
                    </svg>
                </button>
            </div>

            <div> @* Incoming Requests Button *@
                <button class="icon-btn @(displayContactsTab ? "bg-gray-200" : "")" @onclick="DisplayContactsTab">
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M7 6H5m2 3H5m2 3H5m2 3H5m2 3H5m11-1a2 2 0 0 0-2-2h-2a2 2 0 0 0-2 2M7 3h11c.6 0 1 .4 1 1v16c0 .6-.4 1-1 1H7a1 1 0 0 1-1-1V4c0-.6.4-1 1-1Zm8 7a2 2 0 1 1-4 0 2 2 0 0 1 4 0Z" />
                    </svg>
                </button>
            </div>

            <div> @* Notifications Button *@
                <button class="icon-btn @(displayNotificationsTab ? "bg-gray-200" : "")"
                    @onclick="DisplayNotificationsTab">
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 5.4V3m0 2.4a5.3 5.3 0 0 1 5.1 5.3v1.8c0 2.4 1.9 3 1.9 4.2 0 .6 0 1.2-.5 1.2h-13c-.5 0-.5-.6-.5-1.2 0-1.2 1.9-1.8 1.9-4.2v-1.8A5.3 5.3 0 0 1 12 5.4Zm-8.1 5.3c0-2 .8-4.1 2.2-5.7m14 5.7c0-2-.8-4.1-2.2-5.7M8.5 18a3.5 3.5 0 0 0 7 0h-7Z" />
                    </svg>
                </button>
            </div>


            <div> @* Settings Button *@
                <button class="icon-btn w-full">
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M21 13v-2a1 1 0 0 0-1-1h-.8l-.7-1.7.6-.5a1 1 0 0 0 0-1.5L17.7 5a1 1 0 0 0-1.5 0l-.5.6-1.7-.7V4a1 1 0 0 0-1-1h-2a1 1 0 0 0-1 1v.8l-1.7.7-.5-.6a1 1 0 0 0-1.5 0L5 6.3a1 1 0 0 0 0 1.5l.6.5-.7 1.7H4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h.8l.7 1.7-.6.5a1 1 0 0 0 0 1.5L6.3 19a1 1 0 0 0 1.5 0l.5-.6 1.7.7v.8a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-.8l1.7-.7.5.6a1 1 0 0 0 1.5 0l1.4-1.4a1 1 0 0 0 0-1.5l-.6-.5.7-1.7h.8a1 1 0 0 0 1-1Z" />
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" />
                    </svg>
                </button>
            </div>
        </div>

        @if (displayNotificationsTab)
        {
            <Animate Animation="Animations.FadeRight" Duration="TimeSpan.FromSeconds(0.5)" @ref="notificationsTabAnimation">
                <h1 class="font-bold text-xl text-gray-700 my-3">Notifications</h1>

                @* TODO: *@
            </Animate>
        }
        else if (displayContactsTab)
        {
            <Animate Animation="Animations.FadeRight" Duration="TimeSpan.FromSeconds(0.5)" @ref="contactsTabAnimation">
                <div class="flex justify-between items-center">
                    <div>
                        <h1 class="font-bold text-xl text-gray-700 my-3">Contacts</h1>
                    </div>

                    <div>
                        <button class="icon-btn" @onclick="RefreshContactRequestsAsync">
                            <svg class="w-5 h-5 text-gray-800 dark:text-white" aria-hidden="true"
                                xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M17.7 7.7A7.1 7.1 0 0 0 5 10.8M18 4v4h-4m-7.7 8.3A7.1 7.1 0 0 0 19 13.2M6 20v-4h4" />
                            </svg>
                        </button>
                    </div>
                </div>

                @if (isLoadingContactRequests)
                {
                    <DefaultSpinner />
                }
                else
                {
                    <ul class="mb-5 space-y-2">
                        <div class="text-sm text-gray-600">Last refresh: @lastContactRequestsRefreshTime.ToString()</div>
                        <div class="font-medium">Your connection requests</div>
                        <hr />
                        @if (sentContactRequests.Any())
                        {
                            foreach (var r in sentContactRequests)
                            {
                                <li>
                                    <SentContactRequest Request="r"
                                        OnCancelClicked="(() => HandleCancellingContactRequestAsync(r.RequestId))" />
                                </li>
                            }
                        }
                        else
                        {
                            <div class="h-20 flex justify-center items-center">
                                <div>No requests are se</div>
                            </div>
                        }
                    </ul>

                    <ul class="mb-5 space-y-2">
                <div class="font-medium">Sent to you</div>
                <hr />
                @if (incomingContactRequests.Any())
                        {
                            foreach (var r in incomingContactRequests)
                            {
                                <li>
                                    <IncomingContactRequest Request="r" OnAcceptClicked="(() => AcceptContactRequestAsync(r.RequestId))"
                                        OnDeclineClicked="(() => DeclineContactRequestAsync(r.RequestId))"
                                        DisableButtons="isMakingApiCall" />
                                </li>
                            }
                        }
                        else
                        {
                            <div class="h-20 flex justify-center items-center">
                                <div>No incoming requests</div>
                            </div>
                        }
                    </ul>
                }
            </Animate>
        }
        else
        {
            <Animate Animation="Animations.FadeRight" Duration="TimeSpan.FromSeconds(0.5)" @ref="chatsTabAnimation">
                <div class="my-3">
                    <SearchBar /> @* Search Contacts *@
                </div>

                @if (isLoadingContacts)
                {
                    <div class="h-[75%] w-full flex justify-center items-center">
                        <DefaultSpinner />
                    </div>
                }
                else
                {
                    <ul class="space-y-3 h-full overflow-y-auto">
                        @foreach (var contact in contacts)
                        {
                            <Chat ContactModel="contact" />
                        }
                    </ul>
                }
            </Animate>
        }
    </div>
</aside>


@code {
    private ContactDto demoContact = new()
        {
            RequestId = Guid.NewGuid(),
            ThreadId = Guid.NewGuid(),
            Contact = new UserDetailsDto()
        };
}