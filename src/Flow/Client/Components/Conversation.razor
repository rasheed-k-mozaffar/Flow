@if (wantsToDeleteMessages)
{
    <ConfirmMessageDeletesModal Show="wantsToDeleteMessages" OnCancelClicked="CloseConfirmMessageDeletesModal"
    OnDeleteClicked="HandleSendingDeleteMessagesRequestAsync" />
}

<ErrorToast Message="@_errorMessage" DisplayToast="@(!string.IsNullOrEmpty(_errorMessage))"
    DisplayFor="TimeSpan.FromSeconds(5)" OnCloseClicked="(() => _errorMessage = string.Empty)"
    TimerElapsed="(() => _errorMessage = string.Empty)" />

@if (wantsToTakePicture)
{
    <div class="fixed z-50 top-0 right-0 w-full h-full flex items-center justify-center bg-gray-700/80 backdrop-blur-lg ">
    <CameraView Show="wantsToTakePicture" OnCloseClicked="CloseCameraView" typeOfImage="ImageType.NormalImage"
        Title="@($"Send image to {ContactModel.Contact?.Name}")" OnSendImageClicked="HandleSendingPictureAsync" />
</div>
}


<div class="flex justify-items-center items-center flex-col min-h-screen max-h-screen w-full relative">
    @* TOP BAR *@
    <div class="block w-full h-fit p-1.5 bg-white  border-slate-900/5 border-b dark:bg-gray-700 dark:border-gray-600">
        <button data-drawer-target="default-sidebar" data-drawer-toggle="default-sidebar"
            aria-controls="default-sidebar" type="button"
            class="inline-flex bg-white items-center p-2 mt-2 ms-3 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
            <span class="sr-only">Open sidebar</span>
            <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg">
                <path clip-rule="evenodd" fill-rule="evenodd"
                    d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z">
                </path>
            </svg>
        </button>
        <div class="flex items-center gap-4">
            <div>
                <img class="h-[50px] w-[50px] rounded-full object-cover"
                    src="@(ContactModel.Contact!.ProfilePictureUrl ?? "/images/avatar.png")"
                    alt="@ContactModel.Contact!.Name" />
            </div>

            <div class="font-medium dark:text-white">
                <div class="text-xl">@ContactModel.Contact.Name</div>
                <div class="text-sm text-gray-500 dark:text-gray-200">@ContactModel.Contact.Username</div>
            </div>
        </div>
    </div>

    @* MESSAGES AREA*@
    <div id="messages-area"
        class="flex-grow h-full w-full p-2 space-y-1 overflow-y-scroll overflow-x-hidden dark:bg-gray-700 dark:border-gray-600">
        @if (string.IsNullOrEmpty(threadId))
        {
            <DefaultSpinner />
        }
        else
        {
            var groupedMessagesByDay = AppState.Threads![threadId].GroupBy(p => p.SentOn.Day);
            foreach (var messageGroup in groupedMessagesByDay)
            {
                var date = new DateTime(DateTime.Now.Year, DateTime.Now.Month, messageGroup.Key);
                <div class="w-full flex items-center justify-center h-fit">
                    <div class="w-fit rounded-xl py-2 px-3 bg-gray-100 text-gray-500 font-light text-sm">
                        @date.ToString("dd MMMM")</div>
                </div>
                foreach (var message in messageGroup)
                {
                    bool isSent = message.SenderId == currentUser.FindFirst(ClaimTypes.NameIdentifier)!.Value;
                    <Message MessageModel="message" Sent="@isSent" IsSelected="@(selectedMessages.Contains(message.Id))"
                        OnMessageSelected="(() => SelectMessage(message.Id))"
                        OnMessageUnSelected="(() => UnSelectMessage(message.Id))"
                        BackgroundColor="@(isSent ? AppState.UserSettings.ColorScheme?.SentMsgBubbleColor : AppState.UserSettings.ColorScheme?.ReceivedMsgBubbleColor)" />
                }
            }
        }
    </div>



    <EditForm Model="messageModel" class="bottom-0 h-fit w-full relative px-2 dark:bg-gray-700 dark:border-gray-600">
        <div class="w-full relative">
            <div tabindex="-1"
                class="flex justify-center items-center w-full h-0 bg-transparent absolute bottom-[5rem] z-10 gap-2 @(selectedMessages.Any() ? "functions-buttons-strip-show" : "functions-buttons-strip-hidden")">
                <button type="button" @onclick="OpenConfirmMessageDeletesModal"
                    class="p-4 bg-red-600 rounded-full z-40 cursor-pointer transition-all hover:bg-red-700">
                    <svg class="w-6 h-6 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M5 7h14m-9 3v8m4-8v8M10 3h4a1 1 0 0 1 1 1v3H9V4a1 1 0 0 1 1-1ZM6 7h12v13a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V7Z" />
                    </svg>
                </button>

                <button type="button" @onclick="(() => selectedMessages.Clear())"
                    class="p-4 bg-gray-100 rounded-full z-40 cursor-pointer transition-all hover:bg-gray-300">
                    <svg class="w-6 h-6 text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M3 9h13a5 5 0 0 1 0 10H7M3 9l4-4M3 9l4 4" />
                    </svg>
                </button>
            </div>
            <InputText placeholder="Type your message..." @bind-Value="messageModel.Content" @ref="messageInput"
                @oninput="UpdateSendButtonVisibility" disabled="@_isMakingNetworkRequest" class="w-full text-wrap h-auto py-3 rounded-lg 
                text-gray-800  pl-[1rem] pr-[3rem] border-0 bg-gray-200 ring-1 ring-slate-900/5 
                focus:ring-0 focus:outline-none dark:bg-gray-500 dark:text-gray-200 dark:placeholder:text-gray-300" />

            @* ! SEND BUTTON *@

            <button @onclick="HandleSendingMessageAsync" type="submit"
                class="flex items-center justify-center p-2 absolute right-0 top-0 transition-all ">
                <svg class="w-8 h-8 rotate-90 transition-all @(isSendButtonEnabled ? AppState.UserSettings.ColorScheme?.AccentsColor?.TextColor : "text-gray-50")"
                    aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
                    <path fill-rule="evenodd"
                        d="M12 2c.4 0 .8.3 1 .6l7 18a1 1 0 0 1-1.4 1.3L13 19.5V13a1 1 0 1 0-2 0v6.5L5.4 22A1 1 0 0 1 4 20.6l7-18a1 1 0 0 1 1-.6Z"
                        clip-rule="evenodd" />
                </svg>
            </button>

        </div>

        <div class="flex w-full justify-center items-center space-x-4 h-fit transition-all py-1">
            <div>
                <label class="icon-btn">
                    <InputFile OnChange="GetSelectedImagesAsync" class="hidden" multiple />
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
                        <path fill-rule="evenodd" d="M13 10c0-.6.4-1 1-1a1 1 0 1 1 0 2 1 1 0 0 1-1-1Z"
                            clip-rule="evenodd" />
                        <path fill-rule="evenodd"
                            d="M2 6c0-1.1.9-2 2-2h16a2 2 0 0 1 2 2v12c0 .6-.2 1-.6 1.4a1 1 0 0 1-.9.6H4a2 2 0 0 1-2-2V6Zm6.9 12 3.8-5.4-4-4.3a1 1 0 0 0-1.5.1L4 13V6h16v10l-3.3-3.7a1 1 0 0 0-1.5.1l-4 5.6H8.9Z"
                            clip-rule="evenodd" />
                    </svg>

                </label>
            </div>

            <div>
                <button class="icon-btn" @onclick="OpenCameraView">
                    <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linejoin="round" stroke-width="2"
                            d="M4 18V8c0-.6.4-1 1-1h1.5l1.7-1.7c.2-.2.4-.3.7-.3h6.2c.3 0 .5.1.7.3L17.5 7H19c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H5a1 1 0 0 1-1-1Z" />
                        <path stroke="currentColor" stroke-linejoin="round" stroke-width="2"
                            d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                    </svg>
                </button>
            </div>
        </div>

    </EditForm>

</div>


<style>
    .functions-buttons-strip-hidden {
        pointer-events: none;
        transform: translateY(300px);
        transition: .3s ease;
    }

    .functions-buttons-strip-show {
        transform: translateY(0);
        transition: .3s ease;
    }
</style>