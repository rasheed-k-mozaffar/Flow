@inject ISettingsService SettingsService
@inject ApplicationState AppState

<div
    class="fixed z-[10000] bg-white dark:bg-gray-800 h-screen w-screen flex justify-center items-center space-y-4 flex-col">
    <div class="font-bold text-2xl text-gray-600">Flow</div>

    <div class="loader">
    </div>
</div>



@code {
    [Parameter] public EventCallback OnSettingsLoaded { get; set; }

    private string _errorMessage = string.Empty;
    private bool isDoneLoadingData = false;
    protected override async Task OnInitializedAsync()
    {
        await LoadUserSettingsAsync();
    }

    private async Task LoadUserSettingsAsync()
    {
        byte retryCount = 0;

        // try loading the settings, if the loading failes, a retry is made until it's been made 3 times
        do
        {
            try
            {
                if (retryCount == 4)
                {
                    _errorMessage = "Something unusual happened, please refresh the page";
                    return;
                }

                var apiResponse = await SettingsService.GetUserSettingsAsync();

                if (apiResponse.IsSuccess)
                {
                    AppState.UserSettings = apiResponse.Body!;

                    await Task.Delay(1000);
                    await OnSettingsLoaded.InvokeAsync();

                    return;
                }
            }
            catch (ApiGetRequestFailedException ex)
            {
                _errorMessage = ex.Message;
                retryCount++;
            }
        }
        while (retryCount <= 3);
    }
}