@inherits LayoutComponentBase
@inject IJSRuntime Js
@inject ApplicationState State

<SearchUsersModal Show="showSearchModal" OnCloseClicked="CloseSearchModal" />
@if (!showUi)
{
    <LoadingScreen OnSettingsLoaded="ShowUi" />
}
else
{
    <Animate Animation="Animations.FadeIn" DurationMs="500">
    <main class="h-screen overflow-hidden @(State.UserSettings.Theme == Theme.Dark ? "dark" : null)">
        <SideBar OnSearchButtonClicked="OpenSearchModal" />
        <div class=" sm:ml-80 min-h-full">
            @Body
        </div>
    </main>
</Animate>
}
<style type="text/css">
    ::-webkit-scrollbar {
        width: 6px;
        height: 4px;
        background: transparent;
        border-radius: 30px;
    }

    ::-webkit-scrollbar-thumb {
        max-height: 20px;
        background-color: lightgray;
        -webkit-border-radius: 1ex;
    }
</style>
@code {
    private bool showUi = false;
    private bool showSearchModal = false;

    protected override void OnInitialized()
    {
        State.OnChange += StateHasChanged;
    }
    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        await Js.InvokeVoidAsync("window.initializeFlowbite");
    }

    private void ShowUi() => showUi = true;

    private void OpenSearchModal() => showSearchModal = true;

    private void CloseSearchModal() => showSearchModal = false;
}
